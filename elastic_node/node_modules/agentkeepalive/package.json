{
  "_args": [
    [
      {
        "raw": "agentkeepalive@^2.2.0",
        "scope": null,
        "escapedName": "agentkeepalive",
        "name": "agentkeepalive",
        "rawSpec": "^2.2.0",
        "spec": ">=2.2.0 <3.0.0",
        "type": "range"
      },
      "/home/dnovaes/Coding/NodeJs/node_modules/elasticsearch"
    ]
  ],
  "_from": "agentkeepalive@>=2.2.0 <3.0.0",
  "_id": "agentkeepalive@2.2.0",
  "_inCache": true,
  "_location": "/agentkeepalive",
  "_nodeVersion": "4.4.6",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/agentkeepalive-2.2.0.tgz_1466918887669_0.06435476918704808"
  },
  "_npmUser": {
    "name": "fengmk2",
    "email": "fengmk2@gmail.com"
  },
  "_npmVersion": "2.15.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "agentkeepalive@^2.2.0",
    "scope": null,
    "escapedName": "agentkeepalive",
    "name": "agentkeepalive",
    "rawSpec": "^2.2.0",
    "spec": ">=2.2.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/elasticsearch"
  ],
  "_resolved": "https://registry.npmjs.org/agentkeepalive/-/agentkeepalive-2.2.0.tgz",
  "_shasum": "c5d1bd4b129008f1163f236f86e5faea2026e2ef",
  "_shrinkwrap": null,
  "_spec": "agentkeepalive@^2.2.0",
  "_where": "/home/dnovaes/Coding/NodeJs/node_modules/elasticsearch",
  "author": {
    "name": "fengmk2",
    "email": "fengmk2@gmail.com",
    "url": "http://fengmk2.com"
  },
  "browser": "browser.js",
  "bugs": {
    "url": "https://github.com/node-modules/agentkeepalive/issues"
  },
  "contributors": [
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com",
      "url": "https://github.com/fengmk2"
    },
    {
      "name": "Will White",
      "email": "will@mapbox.com",
      "url": "https://github.com/willwhite"
    },
    {
      "name": "dead-horse",
      "email": "heyiyu.deadhorse@gmail.com",
      "url": "https://github.com/dead-horse"
    },
    {
      "name": "Zsolt Lattmann",
      "email": "lattmann@isis.vanderbilt.edu",
      "url": "https://github.com/lattmann"
    },
    {
      "name": "Patrick Malouin",
      "email": "p.malouin@gmail.com",
      "url": "https://github.com/pmalouin"
    },
    {
      "name": "Alexander Penev",
      "email": "alexander.penev@sap.com",
      "url": "https://github.com/saperal"
    },
    {
      "name": "Dylan Piercey",
      "email": "pierceydylan@gmail.com",
      "url": "https://github.com/DylanPiercey"
    }
  ],
  "dependencies": {},
  "description": "Missing keepalive http.Agent",
  "devDependencies": {
    "istanbul": "*",
    "jshint": "^2.9.1",
    "mocha": "*",
    "pedding": "1",
    "should": "4",
    "should-http": "~0.0.2"
  },
  "directories": {},
  "dist": {
    "shasum": "c5d1bd4b129008f1163f236f86e5faea2026e2ef",
    "tarball": "https://registry.npmjs.org/agentkeepalive/-/agentkeepalive-2.2.0.tgz"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "files": [
    "index.js",
    "browser.js",
    "lib"
  ],
  "gitHead": "2a913cc13a5802283693577f46284247c3108aa2",
  "homepage": "https://github.com/node-modules/agentkeepalive#readme",
  "keywords": [
    "http",
    "https",
    "agent",
    "keepalive",
    "agentkeepalive"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    }
  ],
  "name": "agentkeepalive",
  "optionalDependencies": {},
  "readme": "# agentkeepalive\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Appveyor status][appveyor-image]][appveyor-url]\n[![Test coverage][codecov-image]][codecov-url]\n[![David deps][david-image]][david-url]\n[![Known Vulnerabilities][snyk-image]][snyk-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/agentkeepalive.svg?style=flat\n[npm-url]: https://npmjs.org/package/agentkeepalive\n[travis-image]: https://img.shields.io/travis/node-modules/agentkeepalive.svg?style=flat\n[travis-url]: https://travis-ci.org/node-modules/agentkeepalive\n[appveyor-image]: https://ci.appveyor.com/api/projects/status/k7ct4s47di6m5uy2?svg=true\n[appveyor-url]: https://ci.appveyor.com/project/fengmk2/agentkeepalive\n[codecov-image]: https://codecov.io/gh/node-modules/agentkeepalive/branch/master/graph/badge.svg\n[codecov-url]: https://codecov.io/gh/node-modules/agentkeepalive\n[david-image]: https://img.shields.io/david/node-modules/agentkeepalive.svg?style=flat\n[david-url]: https://david-dm.org/node-modules/agentkeepalive\n[snyk-image]: https://snyk.io/test/npm/agentkeepalive/badge.svg?style=flat-square\n[snyk-url]: https://snyk.io/test/npm/agentkeepalive\n[download-image]: https://img.shields.io/npm/dm/agentkeepalive.svg?style=flat-square\n[download-url]: https://npmjs.org/package/agentkeepalive\n\nThe Node.js's missing `keep alive` `http.Agent`. Support `http` and `https`.\n\n## Install\n\n```bash\n$ npm install agentkeepalive --save\n```\n\n## new Agent([options])\n\n* `options` {Object} Set of configurable options to set on the agent.\n  Can have the following fields:\n  * `keepAlive` {Boolean} Keep sockets around in a pool to be used by\n    other requests in the future. Default = `true`\n  * `keepAliveMsecs` {Number} When using HTTP KeepAlive, how often\n    to send TCP KeepAlive packets over sockets being kept alive.\n    Default = `1000`.  Only relevant if `keepAlive` is set to `true`.\n  * `keepAliveTimeout`: {Number} Sets the free socket to timeout\n    after `keepAliveTimeout` milliseconds of inactivity on the free socket.\n    Default is `15000`.\n    Only relevant if `keepAlive` is set to `true`.\n  * `timeout`: {Number} Sets the working socket to timeout\n    after `timeout` milliseconds of inactivity on the working socket.\n    Default is `keepAliveTimeout * 2`.\n  * `maxSockets` {Number} Maximum number of sockets to allow per\n    host. Default = `Infinity`.\n  * `maxFreeSockets` {Number} Maximum number of sockets to leave open\n    in a free state. Only relevant if `keepAlive` is set to `true`.\n    Default = `256`.\n\n## Usage\n\n```js\nvar http = require('http');\nvar Agent = require('agentkeepalive');\n\nvar keepaliveAgent = new Agent({\n  maxSockets: 100,\n  maxFreeSockets: 10,\n  timeout: 60000,\n  keepAliveTimeout: 30000 // free socket keepalive for 30 seconds\n});\n\nvar options = {\n  host: 'cnodejs.org',\n  port: 80,\n  path: '/',\n  method: 'GET',\n  agent: keepaliveAgent\n};\n\nvar req = http.request(options, function (res) {\n  console.log('STATUS: ' + res.statusCode);\n  console.log('HEADERS: ' + JSON.stringify(res.headers));\n  res.setEncoding('utf8');\n  res.on('data', function (chunk) {\n    console.log('BODY: ' + chunk);\n  });\n});\n\nreq.on('error', function (e) {\n  console.log('problem with request: ' + e.message);\n});\nreq.end();\n\nsetTimeout(function () {\n  console.log('keep alive sockets:');\n  console.log(keepaliveAgent.unusedSockets);\n}, 2000);\n\n```\n\n### `agent.getCurrentStatus()`\n\n`agent.getCurrentStatus()` will return a object to show the status of this agent:\n\n```js\n{\n  createSocketCount: 10,\n  closeSocketCount: 5,\n  timeoutSocketCount: 0,\n  requestCount: 5,\n  freeSockets: { 'localhost:57479::': 3 },\n  sockets: { 'localhost:57479::': 5 },\n  requests: {}\n}\n```\n\n### Support `https`\n\n```js\nvar https = require('https');\nvar HttpsAgent = require('agentkeepalive').HttpsAgent;\n\nvar keepaliveAgent = new HttpsAgent();\n// https://www.google.com/search?q=nodejs&sugexp=chrome,mod=12&sourceid=chrome&ie=UTF-8\nvar options = {\n  host: 'www.google.com',\n  port: 443,\n  path: '/search?q=nodejs&sugexp=chrome,mod=12&sourceid=chrome&ie=UTF-8',\n  method: 'GET',\n  agent: keepaliveAgent\n};\n\nvar req = https.request(options, function (res) {\n  console.log('STATUS: ' + res.statusCode);\n  console.log('HEADERS: ' + JSON.stringify(res.headers));\n  res.setEncoding('utf8');\n  res.on('data', function (chunk) {\n    console.log('BODY: ' + chunk);\n  });\n});\n\nreq.on('error', function (e) {\n  console.log('problem with request: ' + e.message);\n});\nreq.end();\n\nsetTimeout(function () {\n  console.log('keep alive sockets:');\n  console.log(keepaliveAgent.unusedSockets);\n  process.exit();\n}, 2000);\n```\n\n## [Benchmark](https://github.com/node-modules/agentkeepalive/tree/master/benchmark)\n\nrun the benchmark:\n\n```bash\ncd benchmark\nsh start.sh\n```\n\nIntel(R) Core(TM)2 Duo CPU     P8600  @ 2.40GHz\n\nnode@v0.8.9\n\n50 maxSockets, 60 concurrent, 1000 requests per concurrent, 5ms delay\n\nKeep alive agent (30 seconds):\n\n```js\nTransactions:          60000 hits\nAvailability:         100.00 %\nElapsed time:          29.70 secs\nData transferred:        14.88 MB\nResponse time:            0.03 secs\nTransaction rate:      2020.20 trans/sec\nThroughput:           0.50 MB/sec\nConcurrency:           59.84\nSuccessful transactions:       60000\nFailed transactions:             0\nLongest transaction:          0.15\nShortest transaction:         0.01\n```\n\nNormal agent:\n\n```js\nTransactions:          60000 hits\nAvailability:         100.00 %\nElapsed time:          46.53 secs\nData transferred:        14.88 MB\nResponse time:            0.05 secs\nTransaction rate:      1289.49 trans/sec\nThroughput:           0.32 MB/sec\nConcurrency:           59.81\nSuccessful transactions:       60000\nFailed transactions:             0\nLongest transaction:          0.45\nShortest transaction:         0.00\n```\n\nSocket created:\n\n```\n[proxy.js:120000] keepalive, 50 created, 60000 requestFinished, 1200 req/socket, 0 requests, 0 sockets, 0 unusedSockets, 50 timeout\n{\" <10ms\":662,\" <15ms\":17825,\" <20ms\":20552,\" <30ms\":17646,\" <40ms\":2315,\" <50ms\":567,\" <100ms\":377,\" <150ms\":56,\" <200ms\":0,\" >=200ms+\":0}\n----------------------------------------------------------------\n[proxy.js:120000] normal   , 53866 created, 84260 requestFinished, 1.56 req/socket, 0 requests, 0 sockets\n{\" <10ms\":75,\" <15ms\":1112,\" <20ms\":10947,\" <30ms\":32130,\" <40ms\":8228,\" <50ms\":3002,\" <100ms\":4274,\" <150ms\":181,\" <200ms\":18,\" >=200ms+\":33}\n```\n\n## License\n\n(The MIT License)\n\nCopyright(c) 2012 - 2015 fengmk2 <fengmk2@gmail.com>\nCopyright(c) node-modules and other contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/node-modules/agentkeepalive.git"
  },
  "scripts": {
    "ci": "npm run lint && npm run test-cov",
    "codecov": "npm i codecov && codecov",
    "lint": "jshint .",
    "test": "mocha -R spec -t 5000 -r should-http test/*.test.js",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- -t 5000 -r should-http test/*.test.js"
  },
  "version": "2.2.0"
}
