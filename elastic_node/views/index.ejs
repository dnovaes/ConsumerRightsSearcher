<!DOCTYPE html>
<html>
<head>

  <script src="js/vue@2.3.3"></script>
  <script src="js/axios.min.js"></script>

  <link rel="stylesheet" type="text/css" href="css/main.css">
  <title>Siri Law BR</title>

</head>
<body>

<div id="div-parent">
  <div id="div-top">
    <div id="div-img-center">
      <img src="imgs/cute_robot1.jpg"></img>
    </div>
    <span id="search-options">
      <input type="checkbox" v-model="posBool" id="posCheckbox">
      <label for="posCheckbox"> Pos-Tagger</label>
    </span>
    <span id="claim-field">
      <input v-model="claimData" type="text" name="claim-field" :placeholder="phValue" v-on:keydown="ajaxSearchSW">
      <p v-if="outputBool">Searching: {{ claimData }}</p>
    </span>
    <span id="postagger-result">
      <p style="min-width:30em;overflow:hidden;align:center;"> {{posResult}}</p>
    </span>
    <span id="sw-field">
      <input v-model="claimDataSW" type="text" name="claim-sw" disabled v-if="resultsBool" > 
    </span> 
  </div>
  <div id="div-bottom">
    <transition name="fade">
    <div id="results-search" v-if="resultsBool">
      <span class="title">{{ resultsTitle }}</span>
      <p v-for="ru in resultUnits"> 
        <comp-result-units :div-id="ru.divId" :span1-id="ru.span1Id" :data="ru.data" @click=""></comp-result-units>
      </p>
    </div>
    </transition>
  </div>
</div>

<script type="text/javascript">

function highlight(content, kw){
  var kwords = "";
  for(var i in kw){
    kwords += "\\b"+kw[i]+"\\b";
    if((parseFloat(i)+1) < kw.length){
      kwords += "|";
    }
  }
  regExp = new RegExp(kwords, "ig");
  content = content.replace(regExp, function(match){
      return "<span class='b'>"+match+"</span>";
  });
  return content;
}

Vue.component('comp-result-units',{
  template: '\
    <div :id="divId" class="resultUnit" @click="showRU">\
      <span :id="span1Id" class="ruIcons" v-html="value">{{ value }}</span>\
      <span class="ruText" v-html="data">{{ data }}</span>\
    </div>\
  ',
  props: ['divId', 'span1Id', 'data'],
  methods: {
    showRU: function(){
      var $el =  this.$el;
      var $spanIcon = this.$el.children[0];
      var $spanText = this.$el.children[1];
      console.dir($spanIcon);
      console.log(this.value);

      if(!this.active){

        Object.assign($el.style, {
          height: "400px", 
          borderColor: "yellowgreen"
        });
        $spanIcon.style.fontSize = "23px";
        Object.assign( $spanText.style, {
          height: $el.style.height,
          overflowY: "scroll"
        });
        this.value = "&#8628";
        this.active = true

      }else{
        
        Object.assign($el.style, {
          height: "35px", 
          borderColor: "black"
        });
        $spanIcon.style.fontSize = "18px";
        Object.assign( $spanText.style, {
          height: $el.style.height,
          overflowY: "hidden"
        });
        this.value = "&#8627";
        this.active = false
        $spanText.scrollTop = 0;

      }
    }
  },
  data: function(){
    return {
      active: false,
      value: "&#8627;"
    }
  }
}); 

var app = new Vue({
  el: '#div-parent',
  data: {
    phValue: "Olá! Como posso ajuda-lo?",
    claimData: "",
    claimDataSW: "",
    keywords: "",
    outputBool: false,
    posBool: false,
    posResult: "",
    resultsBool: false,
    resultsTitle: "Documents: ",
    results: "",
    hits: "",
    index: 0,
    resultUnits: [
    ]
  },
  watch: {
    //if there is a claim type in the inputfield then outputBool = true (show the desc "searching...")
    claimData: function(event){
      if(app.claimData){
        app.outputBool= true; 
      }else{
        app.outputBool= false; 
      }
    },
    resultsBool: function(){
      if(app.resultsBool){
        app.phValue = "Quer ajuda com outra queixa?"
      }else{
        app.phValue = "Olá! Como posso ajuda-lo ?"
      }
    }
  },
  methods: {
    ajaxSearch: function(e){
      if((e.key == "Enter") && (app.claimData != "")){
        config = {
          headers: {
            'Access-Control-Allow-Origin': '*'
          }
        };

        axios.get('http://localhost:9200/cdc/_search?q='+app.claimData, config).then(function (res){
          app.hits = res.data.hits

          var resultsCount = app.hits.hits.length;
          app.resultsTitle = "Documents ("+resultsCount+") :";

          if(resultsCount > 0){
            //always clear this variable before pushing new results to the page
            app.resultUnits = []

            // for each "hit" = document indexed found
            // app.results is handled as RawHtml text
            app.hits.hits.forEach(function(val, i){
              tempContent = val._source.content
              tempContent = highlight(tempContent, app.keywords);
              
              app.resultUnits.push({
                divId: 'resultUnit-'+i,
                span1Id: 'ruStatus-'+i,
                data: tempContent
              });
              app.index+=1;
              /*
              app.results += "<div id='resultUnit-"+i+"' class='resultUnit' >\
                  <span id='ruStatus-"+i+"' class='ruIcons'>&#8627;</span>\
                  <span class='ruText'>"+tempContent+"</span>\
                </div>";
              app.results += "\n"
              */
            });
            //now that the vue.instances are populate, we can generate the html data
            app.resultsBool = true;
          }else{
            app.results = "Nothing was found. Try again with different claim."
            app.resultsBool = false;
            app.results = "";
          }
          app.claimData = "";
        }).catch(function (error){
            console.log(error);
            alert("Sorry an error ocurred trying to connect the elasticsearch.");
        });
      }
    },
    ajaxSearchSW: function(e){
      if((e.key == "Enter") && (app.claimData != "")){
        axios.post('/ajax/stopwordsremoval', {
          claim: app.claimData,
          posBool: app.posBool
        })
        .then(function (res){
          app.keywords = res.data.keywords;
          app.claimDataSW = "Keywords: "+res.data.keywords;
          console.log("response from ajaxSearchSW");
          console.log(res);
          app.posResult = (res.data.claimTagged != "") ? res.data.claimTagged : "";
          //call function that request a search in elasticsearch.js
          app.ajaxSearch(e);
        })
        .catch(function(err){
          console.log(err);
        });
      }
    }
  }
})

</script>

</body>
</html>
